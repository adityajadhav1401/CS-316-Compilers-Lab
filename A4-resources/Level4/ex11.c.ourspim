
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $fp, 0($sp)		# Save the frame pointer
	sub $fp, $sp, 4		# Update the frame pointer

	sub $sp, $sp, 12		# Make space for the locals
# Prologue ends

	li $v0, 0
	sw $v0, 0($fp)
	li $v0, 0
	sw $v0, -4($fp)
	lw $v0, 0($fp)
	li $t0, 5
	sne $t1, $v0, $t0
	beq $t1, $zero, label2 
	lw $v0, 0($fp)
	li $t0, 1
	seq $t2, $v0, $t0
	beq $t2, $zero, label0 
	li $v0, 3
	sw $v0, 0($fp)
	j label1

label0:    	
	li $v0, 10
	sw $v0, 0($fp)

label1:    	

label2:    	

label3:    	
	li $v0, 0
	sw $v0, 0($fp)

label4:    	
	li $v0, 1
	li $t0, 1
	li $t1, 1
	seq $t2, $t0, $t1
	sltu $t0, $t2, $v0
	bne $t0, $zero, label3 
	j label6

label5:    	
	li $v0, 1
	sw $v0, 0($fp)

label6:    	
	li $v0, 1
	li $t0, 1
	sne $t1, $v0, $t0
	bne $t1, $zero, label5 
	lw $v0, 0($fp)
	li $t0, 10
	sgt $t1, $v0, $t0
	beq $t1, $zero, label7 
	li $v0, 5
	or $t0, $v0, $zero
	j label10

label7:    	
	lw $t0, -4($fp)
	li $t2, 10
	sgt $t3, $t0, $t2
	beq $t3, $zero, label8 
	li $t0, 6
	or $t4, $t0, $zero
	j label9

label8:    	
	li $t2, 7
	or $t4, $t2, $zero

label9:    	
	or $t0, $t4, $zero

label10:    	
	li $v0, 7
	seq $t1, $t0, $v0
	beq $t1, $zero, label11 
	li $v0, 15
	or $t2, $v0, $zero
	j label12

label11:    	
	li $t0, 16
	or $t2, $t0, $zero

label12:    	
	sw $t2, -4($fp)
	lw $v0, 0($fp)
	li $t0, 10
	sgt $t1, $v0, $t0
	beq $t1, $zero, label13 
	li $v0, 5
	or $t0, $v0, $zero
	j label16

label13:    	
	li $t0, 7
	li $t2, 7
	seq $t3, $t0, $t2
	beq $t3, $zero, label14 
	li $t0, 15
	or $t4, $t0, $zero
	j label15

label14:    	
	li $t2, 16
	or $t4, $t2, $zero

label15:    	
	or $t0, $t4, $zero

label16:    	
	sw $t0, -4($fp)
	lw $v0, 0($fp)
	li $t0, 0
	seq $t1, $v0, $t0
	lw $v0, -4($fp)
	li $t0, 0
	sge $t2, $v0, $t0
	and $v0, $t1, $t2
	lw $t0, 0($fp)
	li $t1, 0
	slt $t2, $t0, $t1
	or $t0, $v0, $t2
	beq $t0, $zero, label17 
	li $v0, 5
	or $t2, $v0, $zero
	j label18

label17:    	
	li $t1, 6
	or $t2, $t1, $zero

label18:    	
	sw $t2, -4($fp)

# Epilogue Begins
	add $sp, $sp, 12
	lw $fp, 0($sp)  
	jr        $31		# Jump back to the operating system.
# Epilogue Ends

