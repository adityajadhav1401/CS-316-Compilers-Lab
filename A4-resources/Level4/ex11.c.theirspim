
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $fp, 0($sp)		# Save the frame pointer
	sub $fp, $sp, 4		# Update the frame pointer

	sub $sp, $sp, 12		# Make space for the locals
# Prologue ends

	li $v0, 0
	sw $v0, 0($fp)
	li $v0, 0
	sw $v0, -4($fp)
	lw $v0, 0($fp)
	li $t0, 5
	sne $t1, $v0, $t0
	beq $t1, $zero, label11 
	lw $v0, 0($fp)
	li $t0, 1
	seq $t2, $v0, $t0
	beq $t2, $zero, label9 
	li $v0, 3
	sw $v0, 0($fp)
	j label10

label9:    	
	li $v0, 10
	sw $v0, 0($fp)

label10:    	

label11:    	

label12:    	
	li $v0, 0
	sw $v0, 0($fp)

label13:    	
	li $v0, 1
	li $t0, 1
	li $t1, 1
	seq $t2, $t0, $t1
	sltu $t0, $t2, $v0
	bne $t0, $zero, label12 
	j label15

label14:    	
	li $v0, 1
	sw $v0, 0($fp)

label15:    	
	li $v0, 1
	li $t0, 1
	sne $t1, $v0, $t0
	bne $t1, $zero, label14 
	lw $v0, 0($fp)
	li $t0, 10
	sgt $t1, $v0, $t0
	beq $t1, $zero, label16 
	li $v0, 5
	or $t0, $v0, $zero
	j label19

label16:    	
	lw $t0, -4($fp)
	li $t2, 10
	sgt $t3, $t0, $t2
	beq $t3, $zero, label17 
	li $t0, 6
	or $t4, $t0, $zero
	j label18

label17:    	
	li $t2, 7
	or $t4, $t2, $zero

label18:    	
	or $t0, $t4, $zero

label19:    	
	li $v0, 7
	seq $t1, $t0, $v0
	beq $t1, $zero, label20 
	li $v0, 15
	or $t2, $v0, $zero
	j label21

label20:    	
	li $t0, 16
	or $t2, $t0, $zero

label21:    	
	sw $t2, -4($fp)
	lw $v0, 0($fp)
	li $t0, 10
	sgt $t1, $v0, $t0
	beq $t1, $zero, label22 
	li $v0, 5
	or $t0, $v0, $zero
	j label25

label22:    	
	li $t0, 7
	li $t2, 7
	seq $t3, $t0, $t2
	beq $t3, $zero, label23 
	li $t0, 15
	or $t4, $t0, $zero
	j label24

label23:    	
	li $t2, 16
	or $t4, $t2, $zero

label24:    	
	or $t0, $t4, $zero

label25:    	
	sw $t0, -4($fp)
	lw $v0, 0($fp)
	li $t0, 0
	seq $t1, $v0, $t0
	lw $v0, -4($fp)
	li $t0, 0
	sge $t2, $v0, $t0
	and $v0, $t1, $t2
	lw $t0, 0($fp)
	li $t1, 0
	slt $t2, $t0, $t1
	or $t0, $v0, $t2
	beq $t0, $zero, label26 
	li $v0, 5
	or $t2, $v0, $zero
	j label27

label26:    	
	li $t1, 6
	or $t2, $t1, $zero

label27:    	
	sw $t2, -4($fp)

# Epilogue Begins
	add $sp, $sp, 12
	lw $fp, 0($sp)  
	jr        $31		# Jump back to the operating system.
# Epilogue Ends

